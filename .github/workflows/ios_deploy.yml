name: iOS Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create amplifyconfiguration.dart
        env:
          AMPLIFY_CONFIGURATION: ${{ secrets.AMPLIFY_CONFIGURATION }}
        run: |
          echo "$AMPLIFY_CONFIGURATION" > lib/amplifyconfiguration.dart

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.3"

      - name: Clear Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData/

      - name: Install Flutter
        run: |
          brew install flutter

      - name: Flutter pub get
        run: flutter pub get

      - name: Download amplify_auth_cognito_ios Plugin
        run: |
          mkdir -p $HOME/plugins
          curl -L -o $HOME/plugins/amplify_auth_cognito_ios.zip [DIRECT_ZIP_DOWNLOAD_URL]
          unzip -d $HOME/plugins/amplify_auth_cognito_ios $HOME/plugins/amplify_auth_cognito_ios.zip

      - name: Set script permissions
        run: chmod +x ./verify_and_create_symlinks.sh

      - name: Verify and Create Symlinks
        run: |
          ./verify_and_create_symlinks.sh

      - name: Prepare for Flutter build
        run: |
          flutter precache --ios
          flutter clean
          flutter build ios --release --no-codesign

      - name: Check Generated.xcconfig exists
        run: |
          if [ ! -f ios/Flutter/Generated.xcconfig ]; then
            echo "Generated.xcconfig does not exist, ensure Flutter build is successful and generates required files."
            exit 1
          fi

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod setup

      - name: Update and install CocoaPods
        run: |
          cd ios
          pod repo update
          pod install
          cd ..

      - name: Install Fastlane
        run: |
          gem install fastlane -NV
          cd ios
          bundle install
          cd ..

      - name: Build and deploy to TestFlight
        env:
          FASTLANE_USER: ${{ secrets.APPLE_ID }}
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          ISSUER_ID: ${{ secrets.ISSUER_ID }}
          API_KEY_SECRET: ${{ secrets.API_KEY_SECRET }}
        run: |
          cd ios
          fastlane deploy
